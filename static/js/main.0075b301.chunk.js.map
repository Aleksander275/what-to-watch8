{"version":3,"sources":["const.tsx","services/token.ts","utils/utils.ts","store/actions.ts","store/api-action.ts","components/genres-list/genres-list.tsx","components/loading/loading.tsx","components/logo-footer/logo-footer.tsx","components/logo/logo.tsx","components/movie/movie.tsx","components/movie-list/movie-list.tsx","components/show-more/show-more.tsx","components/sing-out/sing-out.tsx","components/main/main.tsx","components/movie-page-details/movie-page-details.tsx","components/movie-page-overview/movie-page-overview.tsx","components/review-text/review-text.tsx","components/movie-page-reviews/movie-page-reviews.tsx","components/tabs/tabs.tsx","components/movie-page/movie-page.tsx","components/error/error.tsx","components/my-list/my-list.tsx","components/player/player.tsx","components/review/rating.tsx","components/review/review.tsx","components/sing-in/sing-in.tsx","components/private-route/private-route.tsx","browser-history/browser-history.ts","components/app/app.tsx","store/reducer.ts","services/api.ts","index.tsx","middlewares/redirect.ts"],"names":["AppRoute","AuthorizationStatus","ActionTypes","APIRoute","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","adaptToClient","filmFromServer","Object","assign","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","scoresCount","runTime","isFavorite","dayjs","extend","duration","describingFilm","count","loadUser","user","type","LoadUser","payload","fetchCurrentFilmAction","id","dispatch","_getState","api","a","get","Films","data","adaptedFilm","film","LoadFilm","fetchFilmPromoAction","Promo","filmPromo","LoadFilmPromo","checkAuthAction","Login","then","response","userFromServer","adaptedData","avatarUrl","toast","info","GenresList","films","genreActive","useSelector","state","genre","useDispatch","useState","isActive","setIsActive","genres","Set","map","onChangeActiveGenre","ChangeActiveGenre","changeActiveGenre","onResetCount","ResetCount","selectedGenre","className","href","onClick","evt","preventDefault","Loading","LogoFooter","to","Main","Logo","FILM_STYLE","display","justifyContent","alignItems","Movie","isHover","setIsHover","show","setShow","useEffect","timer","setTimeout","clearTimeout","showVideo","onMouseEnter","onMouseLeave","style","src","autoPlay","muted","poster","width","height","objectFit","alt","name","MoviesList","ShowMore","IncreaseCountFilms","SingOut","authorizationStatus","Auth","SingIn","delete","Logout","removeItem","email","RequireLogout","activeGenre","history","useHistory","checkedStatusFilm","filmFavoriteId","status","post","checkedStatusPromoFilm","filterFilms","filter","renderedFilms","slice","isShowMore","length","Fragment","released","push","viewBox","xlinkHref","MyList","Number","Details","houseTime","Math","floor","minutesTime","director","starring","item","Overview","rating","description","join","ReviewText","review","date","format","comment","dateTime","getFirstHalfOfReviews","reviews","lengthHalhOfReviews","ceil","getLastHalfOfReviews","Reviews","store","Comments","LoadReviews","fetchReviewsAction","toString","index","getCurrentTab","tab","Tabs","nameTab","setNameTab","MoviePage","useParams","filmsSimilar","LoadFilmsSimilar","fetchFilmsSimilarAction","ResetFilm","currentFilm","isFilmLoaded","isFilmsSimilarLoaded","checkedStatusCurrentFilm","background","Error","Favorite","filmsFavorite","LoadfilmsFavorite","isFilmsFavoriteLoaded","Player","filmId","findIndex","isPlaying","setIsPlaying","setIsVideoLoading","progress","setProgress","time","setTime","videoRef","useRef","ref","onPlay","onPause","onTimeUpdate","period","currentTarget","percentage","currentTime","timeElapsed","replace","onWaiting","onPlaying","onLoadedData","value","max","left","current","pause","play","requestFullscreen","Rating","setRating","onChange","htmlFor","AddReview","textReview","selectedStar","setSelectedStar","handleSubmit","useCallback","reviewsId","selectedRating","parseInt","error","reviewAction","checked","handleStarCount","target","action","onSubmit","Array","fill","_","placeholder","loginRef","passwordRef","password","url","RedirectToRoute","loginAction","PrivateRoute","props","exact","path","render","browserHistory","createBrowserHistory","App","isDataLoaded","Unknown","isCheckedAuth","Review","initialState","HttpCode","createAPI","onUnauthorized","axios","create","baseURL","timeout","interceptors","use","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","authStatus","NoAuth","RequireAuthorization","createStore","GetFilms","LoadFilms","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","_store","next","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0075b301.chunk.js","sourcesContent":["enum AppRoute {\n  Main = '/what-to-watch8/',\n  Movie = '/what-to-watch8/movies/:id',\n  MyList = '/my-list',\n  Player = '/player/:id',\n  SingIn = '/sing-in',\n  Review = '/movies/:id/new-review',\n  Error = '/error',\n}\n\nenum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nconst SHOWN_COUNT_FILMS = 8;\n\nconst DEFAULT_GENRE = 'All genres';\n\nenum ActionTypes {\n  ChangeActiveGenre = 'films/changeActiveGenre',\n  GetFilms = 'films/getFilms',\n  IncreaseCountFilms = 'filmsList/IncreaseCountFilms',\n  ResetCount = 'filmsList/ResetCount',\n  ResetFilm = 'film/ResetFilm',\n  LoadFilms = 'data/LoadFilms',\n  LoadFilmsSimilar = 'data/LoadFilmsSimilar',\n  LoadFilm = 'data/LoadFilm',\n  LoadFilmPromo = 'film/LoadFilmPromo',\n  LoadfilmsFavorite = 'data/LoadFilmsFavorite',\n  LoadReviews = 'data/LoadReviews',\n  LoadUser = 'data/LoadUser',\n  RequireAuthorization = 'user/RequireAuthorization',\n  RequireLogout = 'user/RequireLogout',\n  RedirectToRoute = 'login/redirectToRoute',\n}\n\nenum APIRoute {\n  Promo = '/promo',\n  Films = '/films',\n  Favorite = '/favorite',\n  Login = '/login',\n  Logout = '/logout',\n  Comments = '/comments',\n  Review = '/comments/:film_id'\n}\n\nexport { AppRoute, AuthorizationStatus, ActionTypes, SHOWN_COUNT_FILMS, DEFAULT_GENRE, APIRoute };\n","const AUTH_TOKEN_KEY_NAME = 'what-to-watch';\n\nexport type Token = string;\n\nconst getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nconst saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nconst dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n\nexport { getToken, saveToken, dropToken };\n","import dayjs from 'dayjs';\nimport duration from 'dayjs/plugin/duration';\nimport { AuthorizationStatus } from '../const';\nimport { Film, FilmFromServer, User, UserFromServer } from '../types/types';\n\nconst adaptToClient = (filmFromServer: FilmFromServer): Film => {\n  const adaptedFilm = Object.assign(\n    {},\n    filmFromServer,\n    {\n      posterImage: filmFromServer['poster_image'],\n      previewImage: filmFromServer['preview_image'],\n      backgroundImage: filmFromServer['background_image'],\n      backgroundColor: filmFromServer['background_color'],\n      videoLink: filmFromServer['video_link'],\n      previewVideoLink: filmFromServer['preview_video_link'],\n      scoresCount: filmFromServer['scores_count'],\n      runTime: filmFromServer['run_time'],\n      isFavorite: filmFromServer['is_favorite'],\n    },\n  );\n\n  return adaptedFilm;\n};\n\nconst adaptUserToClient =(userFromServer: UserFromServer): User => {\n  const adaptedUser = Object.assign(\n    {},\n    userFromServer,\n    {\n      avatarUrl: userFromServer['avatar_url'],\n    },\n  );\n\n  return adaptedUser;\n};\n\nconst isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\ndayjs.extend(duration);\n\nconst formatTimeElapsed = (period: number): string =>\n  dayjs\n    .duration(period, 'seconds')\n    .format('-HH:mm:ss')\n    .replace('00:', '');\n\nconst describingFilm = (count: number): string => {\n  switch (true) {\n    case 0 <= count && count < 3:\n      return 'Bad';\n    case 3 <= count && count <  5:\n      return 'Normal';\n    case 5 <= count && count <  8:\n      return 'Good';\n    case 8 <= count && count <  10:\n      return 'Very good';\n    case 10 <= count:\n      return 'Awesome';\n    default:\n      return '';\n  }\n};\n\nexport { adaptToClient, adaptUserToClient, isCheckedAuth, formatTimeElapsed, describingFilm };\n","import { ActionTypes, AppRoute, AuthorizationStatus } from '../const';\nimport { Film, Review, User } from '../types/types';\n\nconst changeActiveGenre = (genre: string) => ({\n  type: ActionTypes.ChangeActiveGenre,\n  payload: genre,\n} as const);\n\nconst getFilms = (films: Film[]) => ({\n  type: ActionTypes.GetFilms,\n  payload: films,\n} as const);\n\nconst increaseCountFilms = (count: number) => ({\n  type: ActionTypes.IncreaseCountFilms,\n  payload: count,\n} as const);\n\nconst resetCount = () => ({\n  type: ActionTypes.ResetCount,\n} as const);\n\nconst resetFilm = () => ({\n  type: ActionTypes.ResetFilm,\n} as const);\n\nconst loadFilms = (films: Film[]) => ({\n  type: ActionTypes.LoadFilms,\n  payload: {films},\n} as const);\n\nconst loadFilmsSimilar = (filmsSimilar: Film[]) => ({\n  type: ActionTypes.LoadFilmsSimilar,\n  payload: {filmsSimilar},\n} as const);\n\nconst loadFilm = (film: Film) => ({\n  type: ActionTypes.LoadFilm,\n  payload: {film},\n} as const);\n\nconst loadFilmPromo = (filmPromo: Film) => ({\n  type: ActionTypes.LoadFilmPromo,\n  payload: {filmPromo},\n} as const);\n\nconst loadFilmsFavorite = (filmsFavorite: Film[]) => ({\n  type: ActionTypes.LoadfilmsFavorite,\n  payload: {filmsFavorite},\n} as const);\n\nconst loadReviews = (reviews: Review[]) => ({\n  type: ActionTypes.LoadReviews,\n  payload: {reviews},\n} as const);\n\nconst requireAuthorization = (authStatus: AuthorizationStatus) => ({\n  type: ActionTypes.RequireAuthorization,\n  payload: authStatus,\n} as const);\n\nconst requireLogout = () => ({\n  type: ActionTypes.RequireLogout,\n} as const);\n\nconst redirectToRoute = (url: AppRoute) => ({\n  type: ActionTypes.RedirectToRoute,\n  payload: url,\n} as const);\n\nconst loadUser = (user: User) => ({\n  type: ActionTypes.LoadUser,\n  payload: {\n    user,\n  },\n} as const);\n\nexport { loadFilmPromo, resetFilm, loadFilmsSimilar, changeActiveGenre, loadFilm, loadFilmsFavorite, getFilms, increaseCountFilms, resetCount, loadFilms, loadReviews, requireAuthorization, requireLogout, redirectToRoute, loadUser };\n","import { APIRoute, AppRoute } from '../const';\nimport { dropToken, saveToken, Token } from '../services/token';\nimport { AuthData, FilmFromServer, Review, ThunkActionResult, ReviewData } from '../types/types';\nimport { adaptToClient, adaptUserToClient } from '../utils/utils';\nimport { loadFilm, loadFilmPromo, loadFilms, loadFilmsFavorite, loadFilmsSimilar, loadReviews, loadUser, redirectToRoute, requireLogout } from './actions';\nimport {toast} from 'react-toastify';\n\nconst AUTH_FAIL_MESSAGE = 'Не забудьте авторизоваться';\nconst REVIEW_FAIL_MESSAGE = 'Не указан текст комментария';\n\nconst fetchFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmFromServer[]>(APIRoute.Films);\n    const adaptedData = data.map((film) => adaptToClient(film));\n    dispatch(loadFilms(adaptedData));\n  };\n\nconst fetchCurrentFilmAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmFromServer>(`${APIRoute.Films}/${id}`);\n    const adaptedFilm = adaptToClient(data);\n    dispatch(loadFilm(adaptedFilm));\n  };\n\nconst fetchFilmPromoAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmFromServer>(APIRoute.Promo);\n    const adaptedFilm = adaptToClient(data);\n    dispatch(loadFilmPromo(adaptedFilm));\n  };\n\nconst fetchFilmsSimilarAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmFromServer[]>(`${APIRoute.Films}/${id}/similar`);\n    const adaptedData = data.map((film) => adaptToClient(film));\n    dispatch(loadFilmsSimilar(adaptedData));\n  };\n\nconst fetchFilmsFavoriteAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmFromServer[]>(APIRoute.Favorite);\n    const adaptedData = data.map((film) => adaptToClient(film));\n    dispatch(loadFilmsFavorite(adaptedData));\n  };\n\nconst fetchReviewsAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Review[]>(`${APIRoute.Comments}/${id}`);\n    dispatch(loadReviews(data));\n  };\n\nconst checkedStatusCurrentFilm = (id: number, status: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.post(`/favorite/${id}/${status}`);\n    dispatch(fetchCurrentFilmAction(id.toString()));\n  };\n\nconst checkedStatusPromoFilm = (id: number, status: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.post(`/favorite/${id}/${status}`);\n    dispatch(fetchFilmPromoAction());\n  };\n\nconst checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      await api.get(APIRoute.Login)\n        .then((response) => {\n          const adaptedData = adaptUserToClient(response.data);\n          dispatch(loadUser(adaptedData));\n        });\n    } catch {\n      toast.info(AUTH_FAIL_MESSAGE);\n    }\n  };\n\nconst loginAction = ({email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data: {token}} = await api.post<{token: Token}>(APIRoute.Login, {email, password});\n    saveToken(token);\n    dispatch(checkAuthAction());\n    dispatch(redirectToRoute(AppRoute.Main));\n  };\n\nconst logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(loadUser({id: 0, email: '', name: '', avatarUrl: '', token: ''}));\n    dispatch(requireLogout());\n  };\n\nconst reviewAction = ({rating, comment, id}: ReviewData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      await api.post(`/comments/${id}`, {rating, comment});\n    } catch {\n      toast.error(REVIEW_FAIL_MESSAGE);\n    }\n  };\n\nexport { fetchFilmsAction, checkAuthAction, loginAction, logoutAction, fetchReviewsAction, reviewAction, fetchFilmsFavoriteAction, checkedStatusCurrentFilm, fetchCurrentFilmAction, fetchFilmsSimilarAction, fetchFilmPromoAction, checkedStatusPromoFilm };\n","import { changeActiveGenre, resetCount } from '../../store/actions';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Film, State } from '../../types/types';\n\nfunction GenresList ({films}: {films: Film[]}): JSX.Element {\n  const genreActive = useSelector<State, string>((state) => state.genre);\n  const dispatch = useDispatch();\n  const [isActive, setIsActive] = useState(genreActive);\n  const genres = ['All genres', ...new Set(films.map((film) => film.genre))];\n\n  const onChangeActiveGenre = (genre: string) => {\n    dispatch(changeActiveGenre(genre));\n  };\n\n  const onResetCount = () => {\n    dispatch(resetCount());\n  };\n\n  const selectedGenre =  (genre: string) => isActive === genre ? 'catalog__genres-item catalog__genres-item--active': 'catalog__genres-item';\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      {genres.map((genre) => (\n        <li className={selectedGenre(genre)} key={genre}>\n          <a\n            href=\"/\"\n            className=\"catalog__genres-link\"\n            onClick={(evt) => {\n              evt.preventDefault();\n              onChangeActiveGenre(genre);\n              setIsActive(genre);\n              onResetCount();\n            }}\n          >\n            {genre}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default GenresList;\n","function Loading(): JSX.Element {\n  return (\n    <p>Loading ...</p>\n  );\n}\n\nexport default Loading;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nexport default function LogoFooter (): JSX.Element {\n  return (\n    <div className=\"logo\">\n      <Link to={AppRoute.Main} className=\"logo__link logo__link--light\">\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction Logo(): JSX.Element {\n  return (\n    <Link className=\"logo__link\" to={AppRoute.Main}>\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </Link>\n  );\n}\n\nexport default Logo;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Film } from '../../types/types';\n\nconst FILM_STYLE = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nfunction Movie ({film}: {film: Film}): JSX.Element {\n\n  const [isHover, setIsHover] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleMouseLeave = () => {\n    setIsHover(false);\n    setShow(false);\n  };\n\n  useEffect(() => {\n    if (!isHover) {return;}\n    const timer = setTimeout(() => {\n      setShow(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [isHover]);\n\n  const showVideo = isHover && show;\n\n  return (\n    <article onMouseEnter={() => setIsHover(true)} onMouseLeave={handleMouseLeave} className=\"small-film-card catalog__films-card\">\n\n      {showVideo &&\n        <div style={FILM_STYLE}>\n          <video src={film.previewVideoLink} autoPlay muted poster={film.previewImage} width=\"280\" height=\"175\" style={{objectFit: 'cover'}} />\n        </div>}\n      {!showVideo &&\n        <div className=\"small-film-card__image\">\n          <img src={film.previewImage} alt={film.name} width=\"280\" height=\"175\" />\n        </div>}\n\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={`/what-to-watch8/movies/${film.id}`}>{film.name}</Link>\n      </h3>\n\n    </article>\n  );\n}\n\nexport default Movie;\n","import { Film } from '../../types/types';\nimport Movie from '../movie/movie';\n\nfunction MoviesList ({films}: {films: Film[]}): JSX.Element {\n  return (\n    <div className=\"catalog__films-list\">\n      {films.map((film) => <Movie key={film.id} film={film} />)}\n    </div>\n  );\n}\n\nexport default MoviesList;\n","import { useDispatch } from 'react-redux';\nimport { SHOWN_COUNT_FILMS } from '../../const';\nimport { increaseCountFilms } from '../../store/actions';\n\nfunction ShowMore (): JSX.Element {\n  const dispatch = useDispatch();\n\n  const handleButtonShowMore = () => {\n    dispatch(increaseCountFilms(SHOWN_COUNT_FILMS));\n  };\n\n  return (\n    <div className=\"catalog__more\">\n      <button onClick={handleButtonShowMore} className=\"catalog__button\" type=\"button\">Show more</button>\n    </div>\n  );\n}\n\nexport default ShowMore;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { logoutAction } from '../../store/api-action';\nimport { State, User } from '../../types/types';\n\nfunction SingOut (): JSX.Element | null {\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(logoutAction());\n  };\n\n  const user = useSelector<State, User>((state) => state.user);\n  const authorizationStatus = useSelector<State, string>((state) => state.authorizationStatus);\n\n  if (authorizationStatus !== AuthorizationStatus.Auth) {\n    return <div className=\"user-block\"><Link to={AppRoute.SingIn} className=\"user-block__link\">Sign in</Link></div>;\n  }\n\n  return (\n    <ul className=\"user-block\">\n      <li className=\"user-block__item\">\n        <div className=\"user-block__avatar\">\n          <img src={user.avatarUrl} alt=\"User avatar\" width=\"63\" height=\"63\" />\n        </div>\n      </li>\n      <li className=\"user-block__item\" onClick={handleLogout}>\n        <Link to={AppRoute.Main} className=\"user-block__link\">Sign out</Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default SingOut;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { checkedStatusPromoFilm } from '../../store/api-action';\nimport { Film, State } from '../../types/types';\nimport GenresList from '../genres-list/genres-list';\nimport Loading from '../loading/loading';\nimport LogoFooter from '../logo-footer/logo-footer';\nimport Logo from '../logo/logo';\nimport MoviesList from '../movie-list/movie-list';\nimport ShowMore from '../show-more/show-more';\nimport SingOut from '../sing-out/sing-out';\n\nfunction Main (): JSX.Element {\n  const films = useSelector<State, Film[]>((state) => state.films);\n  const filmPromo = useSelector<State, Film | null>((state) => state.filmPromo);\n  const activeGenre = useSelector<State, string>((state: State) => state.genre);\n  const count = useSelector<State, number>((state: State) => state.count);\n  const authorizationStatus = useSelector<State, string>((state) => state.authorizationStatus);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isFavorite = filmPromo?.isFavorite;\n\n  const checkedStatusFilm = (filmFavoriteId: number, status: number) => {\n    if (!filmFavoriteId) {return;}\n    dispatch(checkedStatusPromoFilm(filmFavoriteId, status));\n  };\n\n  const filterFilms = films.filter((film) => (activeGenre === 'All genres') ? film : film.genre === activeGenre);\n  const renderedFilms = filterFilms.slice(0, count);\n\n  const isShowMore = films.length > count && renderedFilms.length < filterFilms.length;\n\n  if (filmPromo === null) {\n    return <Loading />;\n  }\n\n  return (\n    <React.Fragment>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={filmPromo.backgroundImage} alt={filmPromo.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <div className=\"logo\">\n            < Logo/>\n          </div>\n\n          <SingOut />\n\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={filmPromo.posterImage} alt={filmPromo.name} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{filmPromo.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{filmPromo.genre}</span>\n                <span className=\"film-card__year\">{filmPromo.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n\n                <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={() => history.push(`/player/${filmPromo.id}`)}>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n\n                <button className=\"btn btn--list film-card__button\" type=\"button\" style={{justifyContent: 'center'}} onClick={() => history.push(AppRoute.MyList)}>\n                  <span>My list</span>\n                </button>\n\n                {authorizationStatus === AuthorizationStatus.Auth ?\n                  <button className =\"btn btn--list film-card__button\" type=\"button\" onClick={() => checkedStatusFilm(filmPromo.id, Number(!isFavorite))}>\n                    {!isFavorite ?\n                      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                        <use xlinkHref='#add'></use>\n                      </svg> : ''}\n                    <span>{isFavorite ? 'Remove from my List' : 'Add to my list'}</span>\n                  </button> : ''}\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenresList films={films} />\n\n          <MoviesList films={renderedFilms} />\n\n          {isShowMore && <ShowMore />}\n\n        </section>\n\n        <footer className=\"page-footer\">\n          <LogoFooter />\n\n          <div className=\"copyright\">\n            <p>© 2019 What to watch Ltd.</p>\n          </div>\n        </footer>\n      </div>\n    </React.Fragment>);\n}\n\nexport default Main;\n","import { Film } from '../../types/types';\n\nfunction Details ({film}: {film: Film}): JSX.Element {\n\n  const houseTime = Math.floor(film.runTime / 60);\n  const minutesTime = film.runTime % 60;\n\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <div className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <div className=\"film-card__details-value\">\n            {film.starring.map((item) => <div key={item}>{item},</div>)}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{houseTime}h {minutesTime}m</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n","import { Film } from '../../types/types';\nimport { describingFilm } from '../../utils/utils';\n\nfunction Overview ({film}: {film: Film}): JSX.Element {\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{describingFilm(film.rating)}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {film.starring.join(', ')} and other</strong></p>\n      </div>\n    </>\n  );\n}\n\nexport default Overview;\n","import { Review } from '../../types/types';\nimport dayjs from 'dayjs';\n\nfunction ReviewText ({review}: {review: Review}): JSX.Element {\n  const date = dayjs(review.date).format('MMMM DD, YYYY');\n\n  return (\n    <div className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{review.comment}</p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{review.user.name}</cite>\n          <time className=\"review__date\" dateTime=\"2016-12-24\">{date}</time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{review.rating}</div>\n    </div>\n  );\n}\n\nexport default ReviewText;\n","/* eslint-disable react/no-array-index-key */\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { store } from '../..';\nimport { fetchReviewsAction } from '../../store/api-action';\nimport { Review, State, ThunkAppDispatch } from '../../types/types';\nimport ReviewText from '../review-text/review-text';\n\nfunction getFirstHalfOfReviews (reviews: Review[]) {\n  const lengthHalhOfReviews = Math.ceil(reviews.length / 2);\n  return reviews.slice(0, lengthHalhOfReviews);\n}\n\nfunction getLastHalfOfReviews (reviews: Review[]) {\n  return reviews.slice(getFirstHalfOfReviews(reviews).length);\n}\n\nfunction Reviews ({id}: {id: number}): JSX.Element {\n  const reviews = useSelector<State, Review[]>((state) => state.reviews);\n\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchReviewsAction(id.toString()));\n  }, [id]);\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {getFirstHalfOfReviews(reviews).map((review, index) => <ReviewText key={index} review={review}/>)}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {getLastHalfOfReviews(reviews).map((review, index) => <ReviewText key={index} review={review}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default Reviews;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Film } from '../../types/types';\nimport Details from '../movie-page-details/movie-page-details';\nimport Overview from '../movie-page-overview/movie-page-overview';\nimport Reviews from '../movie-page-reviews/movie-page-reviews';\n\nfunction getCurrentTab (tab: string, film: Film): JSX.Element {\n  switch (tab) {\n    case 'Overview':\n      return <Overview film={film}/>;\n    case 'Details':\n      return <Details film={film}/>;\n    case 'Reviews':\n      return <Reviews id={film.id}/>;\n    default:\n      return <Overview film={film} />;\n  }\n}\n\nfunction Tabs ({film}: {film: Film }): JSX.Element {\n  const [nameTab, setNameTab] = useState('Overview');\n  const [isActive, setIsActive] = useState(0);\n\n  return (\n    <>\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li className={`film-nav__item ${isActive === 0 ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/movies/${film.id}`} onClick={() => {setNameTab('Overview'); setIsActive(0);}} className=\"film-nav__link\">Overview</Link>\n          </li>\n          <li className={`film-nav__item ${isActive === 1 ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/movies/${film.id}`} onClick={() => {setNameTab('Details'); setIsActive(1);}} className=\"film-nav__link\">Details</Link>\n          </li>\n          <li className={`film-nav__item ${isActive === 2 ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/movies/${film.id}`} onClick={() => {setNameTab('Reviews'); setIsActive(2);}} className=\"film-nav__link\">Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n\n      {getCurrentTab(nameTab, film)}\n\n    </>\n  );\n}\n\nexport default Tabs;\n","import Logo from '../logo/logo';\nimport { Film, State, ThunkAppDispatch } from '../../types/types';\nimport Tabs from '../tabs/tabs';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport Movie from '../movie/movie';\nimport SingOut from '../sing-out/sing-out';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentFilmAction, fetchFilmsSimilarAction, checkedStatusCurrentFilm } from '../../store/api-action';\nimport { store } from '../..';\nimport Loading from '../loading/loading';\nimport { resetFilm } from '../../store/actions';\nimport LogoFooter from '../logo-footer/logo-footer';\n\nfunction MoviePage (): JSX.Element {\n\n  const param: {id: string} = useParams();\n  const id = param.id;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchCurrentFilmAction(id));\n    (store.dispatch as ThunkAppDispatch)(fetchFilmsSimilarAction(id));\n\n    return () => {\n      dispatch(resetFilm());\n    };\n  }, [id, dispatch]);\n\n  const currentFilm = useSelector<State, Film>((state) => state.film);\n  const isFilmLoaded = useSelector<State, boolean>((state) => state.isFilmLoaded);\n  const filmsSimilar = useSelector<State, Film[]>((state) => state.filmsSimilar);\n  const isFilmsSimilarLoaded = useSelector<State, boolean>((state) => state.isFilmsSimilarLoaded);\n  const authorizationStatus = useSelector<State, string>((state) => state.authorizationStatus);\n\n  const isFavorite = currentFilm?.isFavorite;\n\n  const checkedStatusFilm = (filmFavoriteId: number, status: number) => {\n    if (!filmFavoriteId) {return;}\n    dispatch(checkedStatusCurrentFilm(filmFavoriteId, status));\n  };\n\n  if (!isFilmLoaded && !isFilmsSimilarLoaded) {\n    return (<Loading />);\n  }\n\n  return (\n    <React.Fragment>\n      <section className =\"film-card film-card--full\" style={{background: currentFilm?.backgroundColor}}>\n        <div className =\"film-card__hero\">\n          <div className =\"film-card__bg\">\n            <img src={currentFilm?.backgroundImage} alt={currentFilm?.name} />\n          </div>\n\n          <h1 className =\"visually-hidden\">WTW</h1>\n\n          <header className =\"page-header film-card__head\">\n            <div className =\"logo\">\n              < Logo/>\n            </div>\n\n            <SingOut />\n\n          </header>\n\n          <div className =\"film-card__wrap\">\n            <div className =\"film-card__desc\">\n              <h2 className =\"film-card__title\">{currentFilm?.name}</h2>\n              <p className =\"film-card__meta\">\n                <span className =\"film-card__genre\">{currentFilm?.genre}</span>\n                <span className =\"film-card__year\">{currentFilm?.released}</span>\n              </p>\n\n              <div className =\"film-card__buttons\">\n                <button className =\"btn btn--play film-card__button\" type=\"button\" onClick={() => history.push(`/player/${currentFilm?.id}`)}>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <button className =\"btn btn--list film-card__button\" type=\"button\" style={{justifyContent: 'center'}} onClick={() => history.push(AppRoute.MyList)}>\n                  <span>My list</span>\n                </button>\n\n                {authorizationStatus === AuthorizationStatus.Auth ?\n                  <button className =\"btn btn--list film-card__button\" type=\"button\" onClick={() => checkedStatusFilm(currentFilm.id, Number(!isFavorite))}>\n                    {!isFavorite ?\n                      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                        <use xlinkHref='#add'></use>\n                      </svg> : ''}\n                    <span>{isFavorite ? 'Remove from my List' : 'Add to my list'}</span>\n                  </button> : ''}\n\n                <Link to={`/movies/${currentFilm?.id}/new-review`} className =\"btn film-card__button\">Add review</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className =\"film-card__wrap film-card__translate-top\">\n          <div className =\"film-card__info\">\n            <div className =\"film-card__poster film-card__poster--big\">\n              <img src={currentFilm?.posterImage} alt={currentFilm?.name} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className =\"film-card__desc\">\n\n              <Tabs film={currentFilm} />\n\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className =\"page-content\">\n        <section className =\"catalog catalog--like-this\">\n          <h2 className =\"catalog__title\">More like this</h2>\n\n          <div className =\"catalog__films-list\">\n            {filmsSimilar.map((film) => <Movie key={film.id} film={film}/>)}\n          </div>\n        </section>\n\n        <footer className =\"page-footer\">\n          <LogoFooter />\n\n          <div className =\"copyright\">\n            <p>© 2019 What to watch Ltd.</p>\n          </div>\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default MoviePage;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction Error(): JSX.Element {\n  return (\n    <div>\n      <h1>404.\n        <br />\n        <small>Page not found</small>\n      </h1>\n      <Link to={AppRoute.Main}>Go to main page</Link>\n    </div>\n  );\n}\n\nexport default Error;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { store } from '../..';\nimport { fetchFilmsFavoriteAction } from '../../store/api-action';\nimport { Film, State, ThunkAppDispatch } from '../../types/types';\nimport Loading from '../loading/loading';\nimport LogoFooter from '../logo-footer/logo-footer';\nimport Logo from '../logo/logo';\nimport Movie from '../movie/movie';\nimport SingOut from '../sing-out/sing-out';\n\nfunction MyList (): JSX.Element {\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchFilmsFavoriteAction());\n  }, []);\n\n  const filmsFavorite = useSelector<State, Film[]>((state) => state.filmsFavorite);\n  const isFilmsFavoriteLoaded = useSelector<State, boolean>((state) => state.isFilmsFavoriteLoaded);\n\n  if (!isFilmsFavoriteLoaded) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          < Logo/>\n        </div>\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <SingOut />\n\n      </header>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n        {filmsFavorite.length === 0 ?\n          <p>There are no favorite movies now</p> :\n          <div className=\"catalog__films-list\">\n            {filmsFavorite.map((film) => <Movie key={film.id} film={film}/>)}\n          </div>}\n\n      </section>\n\n      <footer className=\"page-footer\">\n        <LogoFooter />\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default MyList;\n","import { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Film } from '../../types/types';\nimport { formatTimeElapsed } from '../../utils/utils';\nimport Loading from '../loading/loading';\n\nfunction Player ({films}: {films: Film[]}): JSX.Element {\n  const param: { id: string } = useParams();\n  const id = param.id;\n  const filmId = films.findIndex((item) => item.id.toString() === id);\n  const currentFilm = films[filmId];\n\n  const history = useHistory();\n  const [ isPlaying, setIsPlaying ] = useState(true);\n  const [ isVideoLoading, setIsVideoLoading ] = useState(true);\n  const [ progress, setProgress ] = useState(0);\n  const [ time, setTime ] = useState('00:00');\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const handlerClickButtonPlay = () => {\n    if (videoRef.current !== null) {\n\n      if (isPlaying) {\n        videoRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        videoRef.current.play();\n        setIsPlaying(true);\n      }\n    }\n  };\n\n  const handlerClickExit = () => {\n    history.push(`/movies/${currentFilm.id}`);\n  };\n\n  const handlerFullScreen = () => {\n    if (videoRef.current !== null) {\n      videoRef.current.requestFullscreen();\n    }\n  };\n\n  const handlerClickPlay = () => {\n    setIsPlaying(true);\n  };\n\n  const handlerClickPause = () => {\n    setIsPlaying(false);\n  };\n  const handlerWaiting = () => {\n    setIsVideoLoading(true);\n  };\n\n  const handleLoadedData = () => {\n    setIsVideoLoading(false);\n  };\n\n  const handlerPlaying = () => {\n    setIsVideoLoading(false);\n  };\n\n  const handlerTimeUpdate = (evt: React.SyntheticEvent<HTMLVideoElement>) => {\n    const { currentTarget } = evt;\n    const percentage = currentTarget.currentTime * 100 / currentTarget.duration;\n    const timeElapsed = formatTimeElapsed(currentTarget.duration - currentTarget.currentTime);\n\n    setTime(timeElapsed);\n    setProgress(percentage);\n  };\n\n  if (isVideoLoading) {\n    <Loading />;\n  }\n\n  return (\n    <div className =\"player\">\n      <video\n        src={currentFilm.videoLink}\n        ref={videoRef}\n        className =\"player__video\"\n        poster={currentFilm.backgroundImage}\n        autoPlay\n        onPlay={handlerClickPlay}\n        onPause={handlerClickPause}\n        onTimeUpdate={handlerTimeUpdate}\n        onWaiting={handlerWaiting}\n        onPlaying={handlerPlaying}\n        onLoadedData={handleLoadedData}\n      >\n      </video>\n\n      <button type=\"button\" className =\"player__exit\" onClick={handlerClickExit}>Exit</button>\n\n      <div className =\"player__controls\">\n        <div className =\"player__controls-row\">\n          <div className =\"player__time\">\n            <progress className =\"player__progress\" value={progress} max=\"100\"></progress>\n            <div className =\"player__toggler\" style = {{ left: `${progress}%` }}>Toggler</div>\n          </div>\n          <div className =\"player__time-value\">{time}</div>\n        </div>\n\n        <div className =\"player__controls-row\">\n          <button type=\"button\" className =\"player__play\" onClick={handlerClickButtonPlay}>\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              { isPlaying ? <use xlinkHref=\"#pause\"></use> : <use xlinkHref=\"#play-s\"/>}\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className =\"player__name\">Transpotting</div>\n\n          <button type=\"button\" className =\"player__full-screen\" onClick={handlerFullScreen}>\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","import { ChangeEventHandler } from 'react';\n\nfunction Rating ({index, setRating}: {index:number, setRating: ChangeEventHandler}): JSX.Element {\n\n  return (\n    <>\n      <input onChange={setRating} className=\"rating__input\" id={`star-${index}`} type=\"radio\" name=\"rating\" value={-index + 10} />\n      <label className=\"rating__label\" htmlFor={`star-${index}`}>Rating {index}</label>\n    </>\n  );\n}\n\nexport default Rating;\n","import Logo from '../logo/logo';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Film, State } from '../../types/types';\nimport SingOut from '../sing-out/sing-out';\nimport { useCallback, useRef, useState } from 'react';\nimport { reviewAction } from '../../store/api-action';\nimport Rating from './rating';\nimport { toast } from 'react-toastify';\n\nconst NUMBER_STARS = 10;\nconst RATING_FAIL_MESSAGE = 'Не указ рейтинг фильма';\n\nfunction AddReview (): JSX.Element {\n  const param: {id: string} = useParams();\n  const id = param.id;\n  const films = useSelector<State, Film[]>((state) => state.films);\n  const filmId = films.findIndex((item) => item.id.toString() === id);\n  const currentFilm = films[filmId];\n  const textReview = useRef<HTMLTextAreaElement | null>(null);\n  const [selectedStar, setSelectedStar] = useState<HTMLInputElement | null>(null);\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback((reviewsId: number) => {\n    if (!selectedStar) {\n      toast.error(RATING_FAIL_MESSAGE);\n      return;\n    }\n\n    const selectedRating = parseInt(selectedStar.value, 10);\n\n    if (textReview.current !== null && selectedRating !== null) {\n      dispatch(reviewAction({\n        rating: selectedRating,\n        comment: textReview.current.value,\n        id: reviewsId,\n      }));\n\n      textReview.current.value = '';\n      selectedStar.checked = false;\n      setSelectedStar(null);\n    }\n  }, [selectedStar, dispatch]);\n\n\n  const handleStarCount = useCallback((evt) => setSelectedStar(evt.target),[]);\n\n  return (\n    <section className=\"film-card film-card--full\" style={{background: currentFilm.backgroundColor}}>\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={currentFilm.backgroundImage} alt={currentFilm.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <div className=\"logo\">\n            < Logo/>\n          </div>\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={`/movies/${currentFilm.id}`} className=\"breadcrumbs__link\">{currentFilm.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <Link to={`/movies/${currentFilm.id}/new-review`} className=\"breadcrumbs__link\">Add review</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <SingOut />\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={currentFilm.posterImage} alt={currentFilm.name} width=\"218\" height=\"327\" />\n        </div>\n      </div>\n\n      <div className=\"add-review\">\n        <form action=\"#\" className=\"add-review__form\" onSubmit={(evt) => {evt.preventDefault(); handleSubmit(currentFilm.id);}}>\n          <div className=\"rating\">\n            <div className=\"rating__stars\">\n              {/*eslint-disable-next-line react/no-array-index-key*/}\n              {new Array(NUMBER_STARS).fill(null).map((_, index) => <Rating index={index} setRating={handleStarCount} key={index}/>)}\n            </div>\n          </div>\n\n          <div className=\"add-review__text\">\n            <textarea\n              ref={textReview}\n              className=\"add-review__textarea\"\n              name=\"review-text\"\n              id=\"review-text\"\n              placeholder=\"Review text\"\n            >\n            </textarea>\n            <div className=\"add-review__submit\">\n              <button className=\"add-review__btn\" type=\"submit\">Post</button>\n            </div>\n\n          </div>\n        </form>\n      </div>\n\n    </section>\n  );\n}\n\nexport default AddReview;\n","import { FormEvent, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../../store/api-action';\nimport LogoFooter from '../logo-footer/logo-footer';\nimport Logo from '../logo/logo';\n\nfunction SingIn (): JSX.Element {\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      dispatch(loginAction({\n        email: loginRef.current.value,\n        password: passwordRef.current.value,\n      }));\n    }\n\n  };\n\n  return (\n    <div className =\"user-page\">\n      <header className =\"page-header user-page__head\">\n        <div className =\"logo\">\n          < Logo/>\n        </div>\n\n        <h1 className =\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className =\"sign-in user-page__content\">\n        <form action=\"\" className =\"sign-in__form\" onSubmit={handleSubmit}>\n          <div className =\"sign-in__fields\">\n            <div className =\"sign-in__field\">\n              <input ref={loginRef} className =\"sign-in__input\" type=\"email\" placeholder=\"Email address\" name=\"user-email\" id=\"user-email\" />\n              <label className =\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className =\"sign-in__field\">\n              <input ref={passwordRef} className =\"sign-in__input\" type=\"password\" placeholder=\"Password\" name=\"user-password\" id=\"user-password\" />\n              <label className =\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className =\"sign-in__submit\">\n            <button className =\"sign-in__btn\" type=\"submit\">Sign in</button>\n          </div>\n        </form>\n      </div>\n\n      <footer className =\"page-footer\">\n        <LogoFooter />\n\n        <div className =\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default SingIn;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { State } from '../../types/types';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n  const status = useSelector<State, string>((state) => state.authorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        status === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.SingIn} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import {Switch, Route, Router as BrowserRouter} from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport Main from '../main/main';\nimport { Film, State } from '../../types/types';\nimport MoviePage from '../movie-page/movie-page';\nimport Error from '../error/error';\nimport MyList from '../my-list/my-list';\nimport Player from '../player/player';\nimport AddReview from '../review/review';\nimport SingIn from '../sing-in/sing-in';\nimport PrivateRoute from '../private-route/private-route';\nimport { useSelector } from 'react-redux';\nimport { isCheckedAuth } from '../../utils/utils';\nimport Loading from '../loading/loading';\nimport browserHistory from '../../browser-history/browser-history';\n\nfunction App(): JSX.Element {\n  const isDataLoaded = useSelector<State, boolean>((state) => state.isDataLoaded);\n  const films = useSelector<State, Film[]>((state) => state.films);\n  const authorizationStatus = useSelector<State, AuthorizationStatus>((state) => state.authorizationStatus);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.Main}>\n          <Main />\n        </Route>\n        <Route exact path={AppRoute.Movie}>\n          <MoviePage />\n        </Route>\n        <Route exact path={AppRoute.Error}>\n          <Error />\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.MyList}\n          render={() => <MyList />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.Player}>\n          <Player films={films}/>\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.Review}\n          render={() => <AddReview />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.SingIn}>\n          < SingIn/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ActionTypes, DEFAULT_GENRE, SHOWN_COUNT_FILMS, AuthorizationStatus } from '../const';\nimport { ActionsType, State } from '../types/types';\n\nconst initialState: State = {\n  genre: DEFAULT_GENRE,\n  films: [],\n  filmsFavorite: [],\n  filmsSimilar: [],\n  filmPromo: null,\n  count: SHOWN_COUNT_FILMS,\n  reviews: [],\n  authorizationStatus: AuthorizationStatus.Unknown,\n  isDataLoaded: false,\n  isFilmsSimilarLoaded: false,\n  isFilmsFavoriteLoaded: false,\n  isFilmLoaded: false,\n  user: {\n    id: 0,\n    email: '',\n    name: '',\n    avatarUrl: '',\n    token: '',\n  },\n  film: {\n    id: 0,\n    name: '',\n    posterImage: '',\n    previewImage: '',\n    backgroundImage: '',\n    backgroundColor: '',\n    videoLink: '',\n    previewVideoLink: '',\n    description: '',\n    rating: 0,\n    scoresCount: 0,\n    director: '',\n    starring: [],\n    runTime: 0,\n    genre: '',\n    released: 0,\n    isFavorite: false,\n  },\n};\n\nfunction reducer (state: State = initialState, action: ActionsType): State {\n  switch (action.type) {\n    case ActionTypes.ChangeActiveGenre:\n      return { ...state, genre: action.payload };\n    case ActionTypes.GetFilms:\n      return { ...state, films: action.payload };\n    case ActionTypes.IncreaseCountFilms:\n      return { ...state, count: state.count + action.payload };\n    case ActionTypes.ResetCount:\n      return { ...state, count: initialState.count };\n    case ActionTypes.ResetFilm:\n      return { ...state, film: initialState.film };\n    case ActionTypes.LoadFilms: {\n      const {films} = action.payload;\n      return { ...state, films, isDataLoaded: true };\n    }\n    case ActionTypes.LoadFilmsSimilar: {\n      const {filmsSimilar} = action.payload;\n      return { ...state, filmsSimilar, isFilmsSimilarLoaded: true };\n    }\n    case ActionTypes.LoadFilm: {\n      const {film} = action.payload;\n      return { ...state, film, isFilmLoaded: true };\n    }\n    case ActionTypes.LoadFilmPromo: {\n      const {filmPromo} = action.payload;\n      return { ...state, filmPromo };\n    }\n    case ActionTypes.LoadfilmsFavorite: {\n      const {filmsFavorite} = action.payload;\n      return { ...state, filmsFavorite, isFilmsFavoriteLoaded: true };\n    }\n    case ActionTypes.LoadReviews: {\n      const { reviews } = action.payload;\n      return { ...state, reviews };\n    }\n    case ActionTypes.RequireAuthorization:\n      return {...state, authorizationStatus: action.payload};\n    case ActionTypes.RequireLogout:\n      return {...state, authorizationStatus: AuthorizationStatus.NoAuth};\n    case ActionTypes.LoadUser: {\n      const {user} = action.payload;\n      return { ...state, user, authorizationStatus: AuthorizationStatus.Auth};\n    }\n    default: return state;\n  }\n}\n\nexport { reducer };\n\n","import axios, {AxiosInstance, AxiosResponse, AxiosRequestConfig, AxiosError} from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\ntype UnauthorizedCallback = () => void;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\nconst createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n\nexport default createAPI;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport { reducer } from './store/reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createAPI from './services/api';\nimport { requireAuthorization } from './store/actions';\nimport { AuthorizationStatus } from './const';\nimport thunk from 'redux-thunk';\nimport { ThunkAppDispatch } from './types/types';\nimport { checkAuthAction, fetchFilmPromoAction, fetchFilmsAction } from './store/api-action';\nimport { redirect } from './middlewares/redirect';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst api = createAPI(() => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)));\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk.withExtraArgument(api)), applyMiddleware(redirect)));\n\n(store.dispatch as ThunkAppDispatch)(checkAuthAction());\n(store.dispatch as ThunkAppDispatch)(fetchFilmPromoAction());\n(store.dispatch as ThunkAppDispatch)(fetchFilmsAction());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ToastContainer />\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'));\n","import { Middleware } from '@reduxjs/toolkit';\nimport browserHistory from '../browser-history/browser-history';\nimport { ActionTypes } from '../const';\nimport { reducer } from '../store/reducer';\n\n\ntype Reducer = ReturnType<typeof reducer>;\n\nexport const redirect: Middleware<unknown, Reducer> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionTypes.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n"],"sourceRoot":""}